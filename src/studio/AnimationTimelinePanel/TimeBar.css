.container {
  --threadHeight: 6px;
  --thumbColor: #00E0FF;
  --focusBarColor: #9DF233;
  height: 0;
  position: relative;

  &.shouldIgnoreMouse {
    pointer-events: none;
  }
}

.time {
  top: 100%;
  font-size: 10px;
  line-height: 18px;
  position: absolute;
  text-align: center;
  color: #888;
}

.timeStart {
  composes: time;
  width: 10px;
  left: -2px;
  text-align: left;
  cursor: default;
}

.timeEnd {
  composes: time;
  width: 30px;
  /*right: -15px;*/
  right: 0;
  text-align: right;
  cursor: pointer;
}

.timeEndInput {
  composes: timeEnd;
  text-align: center;
  line-height: 18px;
  background: #111;
  border-radius: 10%;
}

.timeThread {
  position: relative;
  // bottom: 0;
  top: 0;
  left: 30px;
  // right: 0;
  width: calc(100% - 30px);
  height: var(--threadHeight);
  background: #23363D;
}

.currentTime {
  margin-left: 30px;
  background-color: var(--thumbColor);
  position: absolute;
  z-index: 1000;
  cursor: ew-resize;
}

.currentTimeThumb {
  composes: currentTime;
  width: 5px;
  height: 10px;
  top: -2px;
  border-left: none;
  left: -2px;

  &.isHidden {
    display: none;
  }

  &:before {
    position: absolute;
    display: block;
    content: ' ';
    left: -1px;
    width: 0;
    height: 0;
    border-bottom: 2px solid #1F2B2B;
    border-left: 1px solid transparent;
  }

  &:after {
    position: absolute;
    display: block;
    content: ' ';
    right: -1px;
    width: 0;
    height: 0;
    border-bottom: 2px solid #1F2B2B;
    border-right: 1px solid transparent;
  }
}

.thumbSquinch {
  position: absolute;
  left: 1px;
  right: 1px;
  top: 10px;
  border-top: 3px solid var(--thumbColor);
  border-right: 1px solid transparent;
  border-left: 1px solid transparent;

  &:before {
    position: absolute;
    display: block;
    content: ' ';
    top: -4px;
    left: -2px;
    height: 8px;
    width: 2px;
    background: none;
    border-radius: 0 100% 0 0;
    border-top: 1px solid var(--thumbColor);
    border-right: 1px solid var(--thumbColor);
  }

  &:after {
    position: absolute;
    display: block;
    content: ' ';
    top: -4px;
    right: -2px;
    height: 8px;
    width: 2px;
    background: none;
    border-radius: 100% 0 0 0;
    border-top: 1px solid var(--thumbColor);
    border-left: 1px solid var(--thumbColor);
  }
}

.currentTimeNeedle {
  composes: currentTime;
  width: 0;
  border-left: 1px solid #616161;
  height: calc(100% - 8px);
  top: 8px;

  &.isHidden {
    display: none;
  }
}

.focusBar {
  position: absolute;
  /* display: none; */
  height: 5px;
  background: rgba(#9DF233, 0.2);
  cursor: ew-resize;
  z-index: 2;

  &:hover, &:active {
    background: rgba(#9DF233, 0.4);
  }

  &:after {
    position: absolute -4px;
    display: block;
    content: ' ';
  }
}

.focusHandle {
  position: absolute;
  height: 9px;
  width: 8px;
  /* cursor: ew-resize; */
  z-index: 2;
  top: -2px;
  display: block;

  &:before {
    position: absolute 0;
    display: block;
    content: ' ';
    background: url('url-loader!./FocusBarHandle.svg');
  }

  &:after {
    position: absolute -4px;
    display: block;
    content: ' ';
  }
}

.leftFocusHandle {
  composes: focusHandle;
  left: -7px;
  cursor: w-resize;
  &:before {
    transform: scaleX(-1);
  }
}

.rightFocusHandle {
  composes: focusHandle;
  cursor: e-resize;
  left: 0px;
}

.focusTimeToolTip, .currentTimeToolTip {
  composes: time;
  top: -20px;
  background: #1B2226;
  padding: 0 2px;
  border-radius: 4px;
  left: 4px;
  transform: translateX(-50%);
  display: none;
}

.timeGrid {
  position: absolute;
  top: 0px;
  left: 0px;
  right: 0;
  height: 8px;
  z-index: 1;
  background: url('url-loader!./TimeGridBg.svg');
}

.leftFocusHandle:hover .focusTimeToolTip,
.leftFocusHandle:active .focusTimeToolTip,
.rightFocusHandle:hover .focusTimeToolTip,
.rightFocusHandle:active .focusTimeToolTip,
.currentTimeThumb:hover .currentTimeToolTip,
.currentTimeThumb:active .currentTimeToolTip,
.currentTimeNeedle:hover ~ .currentTimeThumb .currentTimeToolTip,
.currentTimeNeedle:active ~ .currentTimeThumb .currentTimeToolTip,
.focusBar:active ~ .leftFocusHandle .focusTimeToolTip,
.focusBar:active ~ .rightFocusHandle .focusTimeToolTip{
  display: block;
}