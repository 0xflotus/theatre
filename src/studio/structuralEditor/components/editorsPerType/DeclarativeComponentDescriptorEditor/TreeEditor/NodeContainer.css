@value nodeHeight: 27px;
@value nodeMargin: 2px;

.container {
  display: grid;
  grid-template-columns: 1px 16px 1fr 1px;
  position: relative;
  margin-bottom: nodeMargin;
  overflow: hidden;
  --color: rgb(
    calc(39 - var(--depth) * 4 - 4),
    calc(50 - var(--depth) * 4 - 4),
    calc(56 - var(--depth) * 4 - 4)
  );
  top: 0;
  &:hover {
    background: var(--color);
  }

  &.expand {
    opacity: 0;
    height: nodeHeight;
    animation: expand .15s ease-in-out forwards;
    z-index: 1000;
  }

  &.isRelocated {
    --shadow: calc(var(--depth) * 20 + 10);
    z-index: 1000;
    animation: drop .3s ease-in-out forwards;
  }

  &.isCollapsed {
    animation: collapse .3s ease-in-out forwards;
  }
}

@keyframes collapse {
  from {max-height: var(--maxHeight);}
  to {max-height: 0; margin-bottom: 0;}
}

@keyframes expand {
  // from {transform: scaleY(0.1);}
  // to {transform: scaleY(1);}
  from {opacity: 0;}
  to {opacity: 1;}
}

@keyframes drop {
  from {
    top: var(--initialTopOffset);
    max-height: nodeHeight;
    box-shadow: 0 0 20px 5px rgb(var(--shadow), var(--shadow), var(--shadow));
  }
  to {
    top: 0;
    max-height: var(--maxHeight);
    box-shadow: none;
  }
}

.root {
  grid-column: 2 / span 3;
}

.container.isSelected > .root {
  background: #0e1315;
}

.hoverSensor {
  grid-column: 2;
}

.child {
  grid-column: 3;
}
