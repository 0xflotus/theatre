@value nodeHeight from './NodeContainer.css';
@value nodePadding from './NodeContainer.css';

.container {
  position: relative;
  height: nodeHeight;
  font-weight: 400;
  white-space: nowrap;
  display: flex;
  align-items: center;
  box-sizing: border-box;
  padding: 0 nodePadding;

  opacity: 1;

  &.isContentHidden {
    opacity: 0;
  }
}

.container:not(.isSelected) * {
  pointer-events: none !important;
}


.container:hover {
  & .className {
    position: relative;
    visibility: visible;
    pointer-events: auto;
  }
  & .dot {
    display: inline-block;
  }
}

.displayName {
  /* cursor: pointer; */
}

.container.isSelected > .displayName {
  & > .tagOpen,
  & > .tagClose {
    color: rgba(255, 255, 255, 0.5);
  }
}

.className {
  position: relative;
  display: inline-block;
  height: 100%;
  color: white;

  transition: padding 0.2s ease-in-out;

  &.hidden {
    visibility: hidden;
    pointer-events: none;
    position: absolute;
  }

  &:before {
    position: absolute 0;
    display: block;
    content: ' ';
    background: #0e1315;
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
    z-index: -1;
  }

  &:focus-within {
    padding: 0 5px;

    &:before {
      opacity: 1;
    }
  }
}

.input {
  color: white;
  height: 100%;

  &:hover {
    transition: 0.15s background ease-in-out;
    background: #0003;
  }
}

.tagOpen {
  color: #4f5d77;
  margin-right: 2px;
}

.tagClose {
  color: #4f5d77;
  margin-left: 1px;
  position: relative;
}

.container.isRelocated > .displayName > .tagOpen,
.container.isRelocated > .displayName > .tagClose {
  animation: tagColorChange 0.2s ease-in forwards;
}

.tagName {
  color: #d8d8d8;
}

.dot {
  color: #dadada;

  &.hidden {
    display: none;
  }
}

@keyframes tagColorChange {
  0% {
    color: rgb(218, 218, 218);
  }

  100% {
    color: #4f5d77;
  }
}
